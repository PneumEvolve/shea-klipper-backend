"""Added Many-to-Many for Categories

Revision ID: 5caa23cdb3e6
Revises: 987f540d0deb
Create Date: 2025-03-15 20:45:01.154769

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5caa23cdb3e6'
down_revision: Union[str, None] = '987f540d0deb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_categories',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'category_id')
    )
    op.add_column('categories', sa.Column('name', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'categories', ['name'])
    op.drop_constraint('categories_user_id_fkey', 'categories', type_='foreignkey')
    op.drop_column('categories', 'categories')
    op.drop_column('categories', 'user_id')
    op.alter_column('food_inventory', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('recipes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('recipes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('food_inventory', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('categories', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('categories', sa.Column('categories', sa.TEXT(), autoincrement=False, nullable=False))
    op.create_foreign_key('categories_user_id_fkey', 'categories', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'categories', type_='unique')
    op.drop_column('categories', 'name')
    op.drop_table('user_categories')
    # ### end Alembic commands ###
