"""baseline 2025-08-20

Revision ID: 5f960c82dd6c
Revises: 
Create Date: 2025-08-20 19:58:17.184738

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5f960c82dd6c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_id'), 'conversations', ['id'], unique=False)
    op.create_index(op.f('ix_conversations_name'), 'conversations', ['name'], unique=False)
    op.create_table('dream_machine_outputs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('mantra', sa.String(), nullable=False),
    sa.Column('entry_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dream_machine_outputs_id'), 'dream_machine_outputs', ['id'], unique=False)
    op.create_table('forge_ideas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('votes_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_email', sa.String(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forge_ideas_id'), 'forge_ideas', ['id'], unique=False)
    op.create_table('living_plan_sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tasks', sa.JSON(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('owner_email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_living_plan_sections_id'), 'living_plan_sections', ['id'], unique=False)
    op.create_index(op.f('ix_living_plan_sections_owner_email'), 'living_plan_sections', ['owner_email'], unique=False)
    op.create_table('lyra_chat_log',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('reply', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lyra_daily_memory',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('day', sa.Date(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('day')
    )
    op.create_index(op.f('ix_lyra_daily_memory_user_id'), 'lyra_daily_memory', ['user_id'], unique=False)
    op.create_table('lyra_short_term_memory',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('memory', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lyra_soul',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tone', sa.Text(), nullable=False),
    sa.Column('style', sa.Text(), nullable=False),
    sa.Column('beliefs', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('memory', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lyra_weekly_memory',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('week_start', sa.Date(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('week_start')
    )
    op.create_table('problems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('domain', sa.String(), nullable=True),
    sa.Column('scope', sa.String(), nullable=True),
    sa.Column('severity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('anonymous', sa.Boolean(), nullable=True),
    sa.Column('created_by_email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('accepted_solution_id', sa.Integer(), nullable=True),
    sa.Column('solved_at', sa.DateTime(), nullable=True),
    sa.Column('duplicate_of_id', sa.Integer(), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('votes_count', sa.Integer(), nullable=False),
    sa.Column('followers_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['accepted_solution_id'], ['solutions.id'], name='fk_problems_accepted_solution_id'),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['duplicate_of_id'], ['problems.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_problems_created_at'), 'problems', ['created_at'], unique=False)
    op.create_index(op.f('ix_problems_domain'), 'problems', ['domain'], unique=False)
    op.create_index(op.f('ix_problems_id'), 'problems', ['id'], unique=False)
    op.create_index(op.f('ix_problems_title'), 'problems', ['title'], unique=False)
    op.create_table('seed_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identity', sa.String(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('delta', sa.Integer(), nullable=False),
    sa.Column('ref', sa.String(), nullable=True),
    sa.Column('metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_seed_events_created_at'), 'seed_events', ['created_at'], unique=False)
    op.create_index(op.f('ix_seed_events_id'), 'seed_events', ['id'], unique=False)
    op.create_index(op.f('ix_seed_events_identity'), 'seed_events', ['identity'], unique=False)
    op.create_table('solutions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('anonymous', sa.Boolean(), nullable=True),
    sa.Column('created_by_email', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('votes_count', sa.Integer(), nullable=False),
    sa.Column('followers_count', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solutions_created_at'), 'solutions', ['created_at'], unique=False)
    op.create_index(op.f('ix_solutions_id'), 'solutions', ['id'], unique=False)
    op.create_index(op.f('ix_solutions_problem_id'), 'solutions', ['problem_id'], unique=False)
    op.create_index(op.f('ix_solutions_status'), 'solutions', ['status'], unique=False)
    op.create_index(op.f('ix_solutions_title'), 'solutions', ['title'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('has_active_payment', sa.Boolean(), nullable=True),
    sa.Column('api_balance_dollars', sa.Float(), nullable=True),
    sa.Column('profile_pic', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('blog_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_posts_id'), 'blog_posts', ['id'], unique=False)
    op.create_table('communities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('visibility', sa.String(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('layout_config', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_communities_id'), 'communities', ['id'], unique=False)
    op.create_table('conversation_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'conversation_id', name='uq_conv_user')
    )
    op.create_index(op.f('ix_conversation_users_id'), 'conversation_users', ['id'], unique=False)
    op.create_table('farm_game_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_farm_game_states_id'), 'farm_game_states', ['id'], unique=False)
    op.create_table('food_inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('desired_quantity', sa.Integer(), nullable=False),
    sa.Column('categories', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_inventory_id'), 'food_inventory', ['id'], unique=False)
    op.create_table('forge_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('idea_id', sa.Integer(), nullable=False),
    sa.Column('user_email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['forge_ideas.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('idea_id', 'user_email', name='uq_vote_one_per_identity')
    )
    op.create_index(op.f('ix_forge_votes_idea_id'), 'forge_votes', ['idea_id'], unique=False)
    op.create_index(op.f('ix_forge_votes_user_email'), 'forge_votes', ['user_email'], unique=False)
    op.create_table('forge_workers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_email', sa.String(), nullable=True),
    sa.Column('idea_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['forge_ideas.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forge_workers_user_email'), 'forge_workers', ['user_email'], unique=False)
    op.create_table('gardens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('host_name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('host_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gardens_id'), 'gardens', ['id'], unique=False)
    op.create_table('grocery_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grocery_lists_id'), 'grocery_lists', ['id'], unique=False)
    op.create_table('inbox_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_inbox_messages_id'), 'inbox_messages', ['id'], unique=False)
    op.create_table('journal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('reflection', sa.Text(), nullable=True),
    sa.Column('mantra', sa.Text(), nullable=True),
    sa.Column('next_action', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journal_entries_id'), 'journal_entries', ['id'], unique=False)
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mission', sa.String(), nullable=True),
    sa.Column('resources', sa.String(), nullable=True),
    sa.Column('skills_needed', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nodes_id'), 'nodes', ['id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('stripe_session_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('tokens_purchased', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_session_id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_table('problem_follows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('identity', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('problem_id', 'identity', name='uq_problem_follow_one')
    )
    op.create_index(op.f('ix_problem_follows_id'), 'problem_follows', ['id'], unique=False)
    op.create_index(op.f('ix_problem_follows_identity'), 'problem_follows', ['identity'], unique=False)
    op.create_index(op.f('ix_problem_follows_problem_id'), 'problem_follows', ['problem_id'], unique=False)
    op.create_table('problem_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('voter_identity', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('problem_id', 'voter_identity', name='uq_problem_vote_one')
    )
    op.create_index(op.f('ix_problem_votes_id'), 'problem_votes', ['id'], unique=False)
    op.create_index(op.f('ix_problem_votes_problem_id'), 'problem_votes', ['problem_id'], unique=False)
    op.create_index(op.f('ix_problem_votes_voter_identity'), 'problem_votes', ['voter_identity'], unique=False)
    op.create_table('ramblings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ramblings_id'), 'ramblings', ['id'], unique=False)
    op.create_table('recipes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ingredients', sa.Text(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recipes_id'), 'recipes', ['id'], unique=False)
    op.create_table('solution_follows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('solution_id', sa.Integer(), nullable=False),
    sa.Column('identity', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['solution_id'], ['solutions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('solution_id', 'identity', name='uq_solution_follow_one')
    )
    op.create_index(op.f('ix_solution_follows_id'), 'solution_follows', ['id'], unique=False)
    op.create_index(op.f('ix_solution_follows_identity'), 'solution_follows', ['identity'], unique=False)
    op.create_index(op.f('ix_solution_follows_solution_id'), 'solution_follows', ['solution_id'], unique=False)
    op.create_table('solution_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('solution_id', sa.Integer(), nullable=False),
    sa.Column('voter_identity', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['solution_id'], ['solutions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('solution_id', 'voter_identity', name='uq_solution_vote_one')
    )
    op.create_index(op.f('ix_solution_votes_id'), 'solution_votes', ['id'], unique=False)
    op.create_index(op.f('ix_solution_votes_solution_id'), 'solution_votes', ['solution_id'], unique=False)
    op.create_index(op.f('ix_solution_votes_voter_identity'), 'solution_votes', ['voter_identity'], unique=False)
    op.create_table('threads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_threads_id'), 'threads', ['id'], unique=False)
    op.create_table('transcription_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transcription_usage_id'), 'transcription_usage', ['id'], unique=False)
    op.create_table('transcriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('transcription_text', sa.Text(), nullable=True),
    sa.Column('summary_text', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transcriptions_id'), 'transcriptions', ['id'], unique=False)
    op.create_table('user_categories',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'category_id')
    )
    op.create_table('we_dream_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vision', sa.Text(), nullable=False),
    sa.Column('mantra', sa.String(), nullable=False),
    sa.Column('is_active', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_we_dream_entries_id'), 'we_dream_entries', ['id'], unique=False)
    op.create_table('blog_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['blog_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_blog_comments_id'), 'blog_comments', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('thread_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['thread_id'], ['threads.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('community_chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_chat_messages_id'), 'community_chat_messages', ['id'], unique=False)
    op.create_table('community_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_events_id'), 'community_events', ['id'], unique=False)
    op.create_table('community_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('community_projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_projects_id'), 'community_projects', ['id'], unique=False)
    op.create_table('grocery_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('grocery_list_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('checked', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['grocery_list_id'], ['grocery_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grocery_items_id'), 'grocery_items', ['id'], unique=False)
    op.create_table('join_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('node_membership',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'node_id')
    )
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('links', postgresql.ARRAY(sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resources_id'), 'resources', ['id'], unique=False)
    op.create_table('volunteer_applications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('garden_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['garden_id'], ['gardens.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_volunteer_applications_id'), 'volunteer_applications', ['id'], unique=False)
    op.create_table('volunteer_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('garden_id', sa.Integer(), nullable=False),
    sa.Column('volunteer_name', sa.String(), nullable=False),
    sa.Column('volunteer_email', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['garden_id'], ['gardens.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_volunteer_requests_id'), 'volunteer_requests', ['id'], unique=False)
    op.create_table('community_project_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('assigned_to_user_id', sa.Integer(), nullable=True),
    sa.Column('completed_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['completed_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['community_projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_project_tasks_id'), 'community_project_tasks', ['id'], unique=False)
    op.create_table('project_tasks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('assigned_user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('project_tasks')
    op.drop_index(op.f('ix_community_project_tasks_id'), table_name='community_project_tasks')
    op.drop_table('community_project_tasks')
    op.drop_index(op.f('ix_volunteer_requests_id'), table_name='volunteer_requests')
    op.drop_table('volunteer_requests')
    op.drop_index(op.f('ix_volunteer_applications_id'), table_name='volunteer_applications')
    op.drop_table('volunteer_applications')
    op.drop_index(op.f('ix_resources_id'), table_name='resources')
    op.drop_table('resources')
    op.drop_table('projects')
    op.drop_table('node_membership')
    op.drop_table('join_requests')
    op.drop_index(op.f('ix_grocery_items_id'), table_name='grocery_items')
    op.drop_table('grocery_items')
    op.drop_index(op.f('ix_community_projects_id'), table_name='community_projects')
    op.drop_table('community_projects')
    op.drop_table('community_members')
    op.drop_index(op.f('ix_community_events_id'), table_name='community_events')
    op.drop_table('community_events')
    op.drop_index(op.f('ix_community_chat_messages_id'), table_name='community_chat_messages')
    op.drop_table('community_chat_messages')
    op.drop_table('comments')
    op.drop_index(op.f('ix_blog_comments_id'), table_name='blog_comments')
    op.drop_table('blog_comments')
    op.drop_index(op.f('ix_we_dream_entries_id'), table_name='we_dream_entries')
    op.drop_table('we_dream_entries')
    op.drop_table('user_categories')
    op.drop_index(op.f('ix_transcriptions_id'), table_name='transcriptions')
    op.drop_table('transcriptions')
    op.drop_index(op.f('ix_transcription_usage_id'), table_name='transcription_usage')
    op.drop_table('transcription_usage')
    op.drop_index(op.f('ix_threads_id'), table_name='threads')
    op.drop_table('threads')
    op.drop_index(op.f('ix_solution_votes_voter_identity'), table_name='solution_votes')
    op.drop_index(op.f('ix_solution_votes_solution_id'), table_name='solution_votes')
    op.drop_index(op.f('ix_solution_votes_id'), table_name='solution_votes')
    op.drop_table('solution_votes')
    op.drop_index(op.f('ix_solution_follows_solution_id'), table_name='solution_follows')
    op.drop_index(op.f('ix_solution_follows_identity'), table_name='solution_follows')
    op.drop_index(op.f('ix_solution_follows_id'), table_name='solution_follows')
    op.drop_table('solution_follows')
    op.drop_index(op.f('ix_recipes_id'), table_name='recipes')
    op.drop_table('recipes')
    op.drop_index(op.f('ix_ramblings_id'), table_name='ramblings')
    op.drop_table('ramblings')
    op.drop_index(op.f('ix_problem_votes_voter_identity'), table_name='problem_votes')
    op.drop_index(op.f('ix_problem_votes_problem_id'), table_name='problem_votes')
    op.drop_index(op.f('ix_problem_votes_id'), table_name='problem_votes')
    op.drop_table('problem_votes')
    op.drop_index(op.f('ix_problem_follows_problem_id'), table_name='problem_follows')
    op.drop_index(op.f('ix_problem_follows_identity'), table_name='problem_follows')
    op.drop_index(op.f('ix_problem_follows_id'), table_name='problem_follows')
    op.drop_table('problem_follows')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_nodes_id'), table_name='nodes')
    op.drop_table('nodes')
    op.drop_index(op.f('ix_journal_entries_id'), table_name='journal_entries')
    op.drop_table('journal_entries')
    op.drop_index(op.f('ix_inbox_messages_id'), table_name='inbox_messages')
    op.drop_table('inbox_messages')
    op.drop_index(op.f('ix_grocery_lists_id'), table_name='grocery_lists')
    op.drop_table('grocery_lists')
    op.drop_index(op.f('ix_gardens_id'), table_name='gardens')
    op.drop_table('gardens')
    op.drop_index(op.f('ix_forge_workers_user_email'), table_name='forge_workers')
    op.drop_table('forge_workers')
    op.drop_index(op.f('ix_forge_votes_user_email'), table_name='forge_votes')
    op.drop_index(op.f('ix_forge_votes_idea_id'), table_name='forge_votes')
    op.drop_table('forge_votes')
    op.drop_index(op.f('ix_food_inventory_id'), table_name='food_inventory')
    op.drop_table('food_inventory')
    op.drop_index(op.f('ix_farm_game_states_id'), table_name='farm_game_states')
    op.drop_table('farm_game_states')
    op.drop_index(op.f('ix_conversation_users_id'), table_name='conversation_users')
    op.drop_table('conversation_users')
    op.drop_index(op.f('ix_communities_id'), table_name='communities')
    op.drop_table('communities')
    op.drop_index(op.f('ix_blog_posts_id'), table_name='blog_posts')
    op.drop_table('blog_posts')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_solutions_title'), table_name='solutions')
    op.drop_index(op.f('ix_solutions_status'), table_name='solutions')
    op.drop_index(op.f('ix_solutions_problem_id'), table_name='solutions')
    op.drop_index(op.f('ix_solutions_id'), table_name='solutions')
    op.drop_index(op.f('ix_solutions_created_at'), table_name='solutions')
    op.drop_table('solutions')
    op.drop_index(op.f('ix_seed_events_identity'), table_name='seed_events')
    op.drop_index(op.f('ix_seed_events_id'), table_name='seed_events')
    op.drop_index(op.f('ix_seed_events_created_at'), table_name='seed_events')
    op.drop_table('seed_events')
    op.drop_index(op.f('ix_problems_title'), table_name='problems')
    op.drop_index(op.f('ix_problems_id'), table_name='problems')
    op.drop_index(op.f('ix_problems_domain'), table_name='problems')
    op.drop_index(op.f('ix_problems_created_at'), table_name='problems')
    op.drop_table('problems')
    op.drop_table('lyra_weekly_memory')
    op.drop_table('lyra_soul')
    op.drop_table('lyra_short_term_memory')
    op.drop_index(op.f('ix_lyra_daily_memory_user_id'), table_name='lyra_daily_memory')
    op.drop_table('lyra_daily_memory')
    op.drop_table('lyra_chat_log')
    op.drop_index(op.f('ix_living_plan_sections_owner_email'), table_name='living_plan_sections')
    op.drop_index(op.f('ix_living_plan_sections_id'), table_name='living_plan_sections')
    op.drop_table('living_plan_sections')
    op.drop_index(op.f('ix_forge_ideas_id'), table_name='forge_ideas')
    op.drop_table('forge_ideas')
    op.drop_index(op.f('ix_dream_machine_outputs_id'), table_name='dream_machine_outputs')
    op.drop_table('dream_machine_outputs')
    op.drop_index(op.f('ix_conversations_name'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_id'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
