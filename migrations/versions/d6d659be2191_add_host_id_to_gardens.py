"""Add host_id to gardens

Revision ID: d6d659be2191
Revises: 805df2c6c1f9
Create Date: 2025-06-19 10:55:31.277934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd6d659be2191'
down_revision: Union[str, None] = '805df2c6c1f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    # Step 1: Add host_id column as nullable
    op.add_column('gardens', sa.Column('host_id', sa.Integer(), nullable=True))

    # Step 2: Assign a default user (host) to existing gardens â€” CHANGE 1 to a valid user ID!
    op.execute("UPDATE gardens SET host_id = 1")

    # Step 3: Make host_id column non-nullable
    op.alter_column('gardens', 'host_id', nullable=False)

    # Step 4: Add the foreign key constraint to users.id
    op.create_foreign_key(None, 'gardens', 'users', ['host_id'], ['id'])

    # Other schema changes (leave as-is)
    op.alter_column('volunteer_requests', 'garden_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('volunteer_requests', 'volunteer_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('volunteer_requests', 'volunteer_email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('volunteer_requests', 'status',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True,
               existing_server_default=sa.text("'Pending'::text"))
    op.alter_column('volunteer_requests', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_volunteer_requests_id'), 'volunteer_requests', ['id'], unique=False)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_volunteer_requests_id'), table_name='volunteer_requests')
    op.alter_column('volunteer_requests', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('volunteer_requests', 'status',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True,
               existing_server_default=sa.text("'Pending'::text"))
    op.alter_column('volunteer_requests', 'volunteer_email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('volunteer_requests', 'volunteer_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('volunteer_requests', 'garden_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'gardens', type_='foreignkey')
    op.drop_column('gardens', 'host_id')
    # ### end Alembic commands ###
